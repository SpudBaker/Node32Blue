{"version":3,"sources":["C:/Users/Richard/Documents/Development/Blue32/Angular/src/$_lazy_route_resource lazy","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/app.component.html","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/app.component.ts","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/app.module.ts","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/company/company.component.html","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/company/company.component.ts","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/contact/contact.component.html","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/contact/contact.component.ts","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/examples/examples.component.html","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/examples/examples.component.ts","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/home/home.component.html","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/home/home.component.ts","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/method/method.component.html","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/method/method.component.ts","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/pageNotFound/pageNotFound.component.html","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/pageNotFound/pageNotFound.component.ts","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/references/references.component.html","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/references/references.component.ts","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/services/services.component.html","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/services/services.component.ts","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/technology/technology.component.html","C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/technology/technology.component.ts","C:/Users/Richard/Documents/Development/Blue32/Angular/src/environments/environment.ts","C:/Users/Richard/Documents/Development/Blue32/Angular/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"toolbar\\\">\\r\\n    <span class=\\\"unSupportedScreenSizes\\\">\\r\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"appMenu\\\">\\r\\n        <mat-icon>menu</mat-icon>\\r\\n      </button>\\r\\n    </span>\\r\\n    <span class=\\\"fill-remaining-space\\\">32 Blue</span>\\r\\n    <span><img src=\\\"./assets/32BlueLogo.png\\\" height=\\\"50\\\" align=\\\"right\\\"></span>\\r\\n</mat-toolbar>\\r\\n<mat-menu #appMenu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item routerLink = \\\"home\\\"> Home </button>\\r\\n        <button mat-menu-item routerLink = \\\"company\\\"> Company </button>\\r\\n        <button mat-menu-item routerLink = \\\"services\\\"> Services </button>\\r\\n        <button mat-menu-item routerLink = \\\"technology\\\"> Technology </button>\\r\\n        <button mat-menu-item routerLink = \\\"method\\\"> Method </button>\\r\\n        <button mat-menu-item routerLink = \\\"examples\\\"> Examples </button>\\r\\n        <button mat-menu-item routerLink = \\\"references\\\"> References </button>\\r\\n        <button mat-menu-item routerLink = \\\"contact\\\"> Contact </button>\\r\\n</mat-menu>\\r\\n<!-- primary content -->\\r\\n  <div class=\\\"fill-content\\\" class=\\\"unSupportedScreenSizes\\\"><router-outlet></router-outlet></div>\\r\\n  <div class=\\\"supportedScreenSizes\\\">This web page is not suitable for viewing on a screen width less than 600 pixels in width</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\n\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule, MatButtonModule, MatTabsModule, MatMenuModule, MatIconModule, MatTableModule,\n  MatSelectModule, MatFormFieldModule, MatInputModule, MatSliderModule } from '@angular/material';\nimport { HttpClientModule } from '@angular/common/Http';\nimport { AppComponent } from './app.component';\nimport { CompanyComponent } from './company/company.component';\nimport { PageNotFoundComponent } from './pageNotFound/pageNotFound.component';\nimport { HomeComponent } from './home/home.component';\nimport { ServicesComponent } from './services/services.component';\nimport { TechnologyComponent } from './technology/technology.component';\nimport { MethodComponent } from './method/method.component';\nimport { ExamplesComponent } from './examples/examples.component';\nimport { ReferencesComponent } from './references/references.component';\nimport { ContactComponent } from './contact/contact.component';\n\nconst appRoutes: Routes = [\n  { path: 'company', component: CompanyComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'services', component: ServicesComponent },\n  { path: 'technology', component: TechnologyComponent},\n  { path: 'method', component: MethodComponent },\n  { path: 'examples', component: ExamplesComponent },\n  { path: 'references', component: ReferencesComponent },\n  { path: 'contact', component: ContactComponent },\n  { path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CompanyComponent,\n    ServicesComponent,\n    TechnologyComponent,\n    MethodComponent,\n    ExamplesComponent,\n    ReferencesComponent,\n    PageNotFoundComponent,\n    ContactComponent\n  ],\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      // { enableTracing: true } // <-- debugging purposes only\n    ),\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSliderModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/app.module.ts","module.exports = \"<mat-tab-group>\\r\\n    <mat-tab label=\\\"32 Blue\\\">\\r\\n        <div class=\\\"tab-content\\\">\\r\\n            The limited company was formed in 2017 by Richard Baker, BSc(Hons), Prince 2 practitioner and ITIL expert. \\r\\n            Richard has worked in IT for 20 years in Blue Chip and SME organisations most recently as a Head of IT. \\r\\n            <br/>\\r\\n            <br/>\\r\\n            The characteristics that set 32 Blue apart are:<br/> \\r\\n            <ul>\\r\\n                <li>Customer engagement is key</li>\\r\\n                <li>Solutions must not be just functionally rich but must also be responsive, available, and trouble free allowing for satisfied and effective users</li>\\r\\n                <li>Use of enterpise standard open-source technology</li>\\r\\n                <li>Quality is vital</li>\\r\\n                <li>A transparent cost and delivery model with appropriate project management</li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n</mat-tab-group>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/company/company.component.html\n// module id = ../../../../../src/app/company/company.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-company',\r\n  templateUrl: 'company.component.html'\r\n})\r\nexport class CompanyComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/company/company.component.ts","module.exports = \"<mat-tab-group>\\r\\n        <mat-tab label=\\\"Sales\\\">\\r\\n                <div class=\\\"tab-content\\\">\\r\\n                        Please e-mail sales@32blue.co.uk providing contact details.\\r\\n\\r\\n                        Thank you for you interest!\\r\\n                </div>\\r\\n        </mat-tab>\\r\\n</mat-tab-group>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/contact/contact.component.html\n// module id = ../../../../../src/app/contact/contact.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: 'contact.component.html'\r\n})\r\n\r\nexport class ContactComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/contact/contact.component.ts","module.exports = \"<mat-tab-group>\\r\\n        <mat-tab label=\\\"Table\\\">\\r\\n                <div class=\\\"tab-content\\\">\\r\\n                        <div>\\r\\n                                <mat-form-field>\\r\\n                                        <mat-select placeholder=\\\"Country\\\">\\r\\n                                                <mat-option *ngFor=\\\"let country of getCountries()\\\" [value]=\\\"country.code\\\">\\r\\n                                                        {{ country.name }}\\r\\n                                                </mat-option>\\r\\n                                        </mat-select>\\r\\n                                </mat-form-field><br/>\\r\\n                                <mat-form-field>\\r\\n                                        <input matInput (keyup)=\\\"applyIcaoFilter($event.target.value)\\\" placeholder=\\\"ICAO Filter\\\">\\r\\n                                </mat-form-field>\\r\\n                                \\r\\n                                <mat-slider min=0 max=10000 displayValue='Elevation' thumbLabel='Elevation' value=\\\"1000\\\"></mat-slider>\\r\\n                              \\r\\n                                <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n                              \\r\\n                                  <!-- icao Column -->\\r\\n                                  <ng-container matColumnDef=\\\"icao\\\">\\r\\n                                    <mat-header-cell *matHeaderCellDef> ICAO </mat-header-cell>\\r\\n                                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.icao}} </mat-cell>\\r\\n                                  </ng-container>\\r\\n                              \\r\\n                                  <!-- Name Column -->\\r\\n                                  <ng-container matColumnDef=\\\"name\\\">\\r\\n                                    <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\r\\n                                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\r\\n                                  </ng-container>\\r\\n                              \\r\\n                                  <!-- City Column -->\\r\\n                                  <ng-container matColumnDef=\\\"city\\\">\\r\\n                                    <mat-header-cell *matHeaderCellDef> City </mat-header-cell>\\r\\n                                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.city}} </mat-cell>\\r\\n                                  </ng-container>\\r\\n                              \\r\\n                                  <!-- Elevation Column -->\\r\\n                                  <ng-container matColumnDef=\\\"elevation\\\">\\r\\n                                    <mat-header-cell *matHeaderCellDef> Elevation </mat-header-cell>\\r\\n                                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.elevation}} </mat-cell>\\r\\n                                  </ng-container>\\r\\n                              \\r\\n                                  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n                                  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n                                </mat-table>\\r\\n                              </div>\\r\\n                </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Data\\\">\\r\\n                <div class=\\\"tab-content\\\">\\r\\n                        Show large nested table of data<br/><br/>\\r\\n                        Show graphs\\r\\n\\r\\n                        and more\\r\\n                </div>\\r\\n        </mat-tab>\\r\\n</mat-tab-group>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/examples/examples.component.html\n// module id = ../../../../../src/app/examples/examples.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Component({\r\n  selector: 'app-examples',\r\n  templateUrl: 'examples.component.html'\r\n})\r\n\r\n\r\n\r\nexport class ExamplesComponent {\r\n  displayedColumns = ['icao', 'name', 'city', 'elevation'];\r\n  inputAltitude = 1000;\r\n  baseUrl = 'http://blue32.herokuapp.com';\r\n  ELEMENT_DATA: [Element];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  applyIcaoFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.callCountriesService('MX', 0);\r\n\r\n  }\r\n\r\n  callCountriesService(countryCode: string, minElevation: number) {\r\n    const t = this;\r\n    return this.http\r\n        // http://<baseurl>/samples/airports/?countryCode=MX&elevation=1000\r\n        .get(this.baseUrl + '/samples/airports/' + '?' + 'countryCode=' + countryCode + '&' + 'elevation=' + minElevation)\r\n        .catch(e => {\r\n          return Observable.throw(e);\r\n        })\r\n        .subscribe(c => {\r\n          t.ELEMENT_DATA = c;\r\n          t.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n        });\r\n}\r\n\r\n  getCountries() {\r\n    return countries;\r\n  }\r\n\r\n}\r\n\r\nexport interface Element {\r\n  countryCode: string;\r\n  icao: string;\r\n  name: string;\r\n  city: string;\r\n  elevation: number;\r\n}\r\n\r\nconst countries = [\r\n  {code: 'MX', name: 'Mexico'},\r\n  {code: 'US', name: 'USA'},\r\n  {code: 'UK', name: 'United Kingdown'}\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/examples/examples.component.ts","module.exports = \"<mat-tab-group>\\r\\n        <mat-tab label=\\\"About\\\">\\r\\n            <div class=\\\"tab-content\\\">\\r\\n                32 Blue is a builder of cost effective, reliable applications specifically for the SME market:<br/><br/>\\r\\n                        <ul>\\r\\n                            <li>Designed to run in a browser using the latest technologies</li>\\r\\n                            <li>Cloud based</li>\\r\\n                            <li>Optimised for both PC and tablets</li>\\r\\n                            <li>Highly functional and data driven</li>\\r\\n                            <li>Secure</li>\\r\\n                            <li>Without software installation and licensing costs</li>\\r\\n                            <li>Capable of supporting any number of users simultaneously</li>\\r\\n                            <li>Optimised for speed and responsiveness allowing for a great user experience</li>\\r\\n                        </ul>\\r\\n                <br/>\\r\\n                <br/>\\r\\n                <br/>\\r\\n                <br/>\\r\\n                <br/>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Site\\\">\\r\\n            <div class=\\\"tab-content\\\">\\r\\n                This site has been created by 32 Blue and is hosted on the Amazon Cloud.<br/><br/>\\r\\n                Please use the menu accessed on the top left of the screen for navigation (and note the speed of response). \\r\\n                Choosing the 'examples' menu option deomstrates retreiving data from the server.<br/><br/>\\r\\n                The web page is designed to view on a PC or tablet.<br/><br/> \\r\\n            </div>\\r\\n        </mat-tab>\\r\\n</mat-tab-group>\\r\\n    \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'home.component.html'\r\n})\r\nexport class HomeComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/home/home.component.ts","module.exports = \"<mat-tab-group>\\r\\n        <mat-tab label=\\\"Process\\\">\\r\\n                <div class=\\\"tab-content\\\">\\r\\n                        The methodology used is both lightweight and flexible (dependant on customer needs and project complexity). It can consist of the following stages potentially broken into phases (or 'Sprints');<br/><br/>\\r\\n                        <ol>\\r\\n                                <li>Definition of Objectives detailed in a simple document that describes success for the project in business terms.</li>\\r\\n                                <li>Production of 'Use-Cases', i.e 'who will be using the application and for what purpose'</li>\\r\\n                                <li>Data analysis - bringing any existing data sources into the solution</li>\\r\\n                                <li>A 'Wire-frame' protype showing screen flows with example data </li>\\r\\n                                <li>Build and Test</li>\\r\\n                                <li>Customer Acceptance</li>\\r\\n                        </ol>   \\r\\n                </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Documentation\\\">\\r\\n                <div class=\\\"tab-content\\\">\\r\\n                    Professionally written documentation is a given.<br/><br/>\\r\\n                    The set of documents can include Functional Specifications / Mock-ups, User Guides, Operational Procedures, Data Definitions.<br><br/>\\r\\n                    Format can be PDF or alternatively User Guides can be created with the application as on-line help.  \\r\\n                </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Commercials\\\">\\r\\n                <div class=\\\"tab-content\\\">\\r\\n                        Simple hourly rates are available along with quoted fixed cost. <br/><br/>\\r\\n                        The prefered commercial arrangement is a reduced upfront cost with an ongoing usage based charge. This ensures both parties have a stake in the success of the project.              \\r\\n                </div>\\r\\n        </mat-tab>\\r\\n</mat-tab-group>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/method/method.component.html\n// module id = ../../../../../src/app/method/method.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-method',\r\n  templateUrl: 'method.component.html'\r\n})\r\nexport class MethodComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/method/method.component.ts","module.exports = \"Page not found\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/pageNotFound/pageNotFound.component.html\n// module id = ../../../../../src/app/pageNotFound/pageNotFound.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: 'pageNotFound.component.html'\r\n})\r\nexport class PageNotFoundComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/pageNotFound/pageNotFound.component.ts","module.exports = \"<mat-tab-group>\\r\\n        <mat-tab label=\\\"SES\\\">\\r\\n                <div class=\\\"tab-content\\\">\\r\\n                        Stuff about SES<br/><br/>\\r\\n\\r\\n                        and more\\r\\n                        \\r\\n                </div>\\r\\n        </mat-tab>\\r\\n</mat-tab-group>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/references/references.component.html\n// module id = ../../../../../src/app/references/references.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-references',\r\n  templateUrl: 'references.component.html'\r\n})\r\n\r\nexport class ReferencesComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/references/references.component.ts","module.exports = \"<mat-tab-group>\\r\\n    <mat-tab label=\\\"Analysis\\\">\\r\\n        <div class=\\\"tab-content\\\">\\r\\n            A structured approach is used to identify what is required of an application to make it a success. <br/><br/>\\r\\n            Initially it is gaining an understanding of the current business model and processes and crucially defining a problem statement or opportunity that requires addressing, \\r\\n            whether that be related to increased automation, data quality, process governance, management control or any other reason.<br/><br/>\\r\\n            Once a target business model is agreed the functional and data analysis takes place leading to a mock-up with working flows and links. \\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Database\\\">\\r\\n        <div class=\\\"tab-content\\\">\\r\\n            Strong database design is key to ensuring a clearly defined structure that avoids duplicity ('one version of truth'), ensures consistancy, \\r\\n            is performant, and can be readily interrogated. <br/><br/>\\r\\n            Data migration from existing systems can be undertaken whether a relational database or text files / spreadsheets or any other source. <br/><br/>\\r\\n            Data cleaning and transformation is also possible.\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Web\\\">\\r\\n        <div class=\\\"tab-content\\\">\\r\\n            Web applications can become inordinately complex if not built and designed correctly. \\r\\n            32 Blue uses the most modern framework available allowing for levels of functionality and complexity \\r\\n            that would have been considered impossible without a serious budget only a few years ago.<br/><br/>\\r\\n            Use of industry standard Google based components ensures a slick user experience.    \\r\\n        </div>\\r\\n    </mat-tab>\\r\\n</mat-tab-group>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/services/services.component.html\n// module id = ../../../../../src/app/services/services.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-services',\r\n  templateUrl: 'services.component.html'\r\n})\r\nexport class ServicesComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/services/services.component.ts","module.exports = \"<mat-tab-group>\\r\\n        <mat-tab label=\\\"Database\\\">\\r\\n                <div class=\\\"tab-content\\\">\\r\\n                        32 Blue by default will use an open source MySql database (or a derivative) located on the Amazon cloud.<br/><br/>\\r\\n                        Users with appropriate permissions and knowledge can directly access the database to run queries and extracts.  \\r\\n\\r\\n                </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Web\\\">\\r\\n                <div class=\\\"tab-content\\\">\\r\\n                        <br/><br/>\\r\\n                        32 Blue utilises a Single Page Architecture (SPA) built with the Angular framework allowing for rich, responsive, and complex web applications.<br/><br/>   \\r\\n                        Presentation is kept separate from business logic and re-useable RESTful data services are utilised to connect to the database.<br/><br/>\\r\\n                        Node.js is the dominant open source Javascript runtime for servers and has become an industry standard for hosting web applications and services.<br/><br/>\\r\\n                        A secure password mechanism with users defined into roles can built into an applicaton.\\r\\n                        Alternatively it is possible to integrate with 3rd party authentication services like Google or Facebook.\\r\\n                \\r\\n                </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Hosting\\\">\\r\\n                <div class=\\\"tab-content\\\">\\r\\n                        Deployed applications are hosted on Amazon cloud (at a minimal ongoing cost) bringing large enterprise levels of \\r\\n                        availability, performance and operational support including back-ups.<br/><br/>\\r\\n                        Users of 32 Blue applications do not require to host any hardware other than the PC or tablet with internet access. \\r\\n                        Similarly there are no software requirements other than a modern Internet Browser (e.g Chrome, Internet Explorer, Edge, or Firefox)  \\r\\n                </div>\\r\\n        </mat-tab>\\r\\n</mat-tab-group>\\r\\n                        \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/technology/technology.component.html\n// module id = ../../../../../src/app/technology/technology.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-technology',\r\n  templateUrl: 'technology.component.html'\r\n})\r\nexport class TechnologyComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/app/technology/technology.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Richard/Documents/Development/Blue32/Angular/src/main.ts"],"sourceRoot":"webpack:///"}